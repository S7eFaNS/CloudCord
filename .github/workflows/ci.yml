name: CI

on:
  push:
    branches: [ci]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.1' 

      - name: Run unit tests for user_api
        working-directory: ./user_api
        run: |
          go test ./... -v -cover

      - name: Run tests for chat_api
        working-directory: ./chat_api
        run: |
          go test ./... -v -cover

build:
  runs-on: ubuntu-latest
  needs: test
  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build frontend image
      run: docker build -t frontend:latest ./frontend

    - name: Build user_api image
      run: docker build -t user-api:latest ./user_api

    - name: Build chat_api image
      run: docker build -t chat-api:latest ./chat_api

    - name: Build notification_api image
      run: docker build -t notification-api:latest ./notification_api

deployment:
  runs-on: ubuntu-latest
  needs: build
  env:
    DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ env.DOCKERHUB_TOKEN }}

    - name: Tag and push frontend image
      run: |
        docker tag frontend:latest $DOCKERHUB_USERNAME/frontend:latest
        docker push $DOCKERHUB_USERNAME/frontend:latest

    - name: Tag and push user_api image
      run: |
        docker tag user-api:latest $DOCKERHUB_USERNAME/user-api:latest
        docker push $DOCKERHUB_USERNAME/user-api:latest

    - name: Tag and push chat_api image
      run: |
        docker tag chat-api:latest $DOCKERHUB_USERNAME/chat-api:latest
        docker push $DOCKERHUB_USERNAME/chat-api:latest

    - name: Tag and push notification_api image
      run: |
        docker tag notification-api:latest $DOCKERHUB_USERNAME/notification-api:latest
        docker push $DOCKERHUB_USERNAME/notification-api:latest

