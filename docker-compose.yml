services:

  postgres:
    image: postgres:15
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  user_api:
    build:
      context: ./user_api
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    env_file:
      - ./user_api/.env
    depends_on:
      - postgres

  chat_api:
    build:
      context: ./chat_api
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    env_file:
      - ./chat_api/.env
 
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80" 
    depends_on:
      - user_api
    restart: always

  loki:
    image: grafana/loki:3.2.0
    ports:
      - "3100:3100"
    volumes:
      - ./log-collector/config.yaml:/etc/loki/config.yaml
    command: -config.file=/etc/loki/config.yaml
      - config.expand-env=true

  promtail:
    image: grafana/promtail:3.2.0
    ports:
      - "9080:9080"
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./log-collector/promtail-config.yaml:/etc/promtail/promtail-config.yaml
    command: -config.file=/etc/promtail/promtail-config.yaml
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    depends_on:
      - loki
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./log-collector/grafana-datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
    restart: unless-stopped

volumes:
  grafana-storage:
  postgres_data:
